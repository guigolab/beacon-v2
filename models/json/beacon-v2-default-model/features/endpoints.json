{
    "components": {
        "parameters": {
            "entryId": {
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "filters": {
                "in": "query",
                "name": "filters",
                "schema": {
                    "examples": [
                        [
                            "NCIT:C3222"
                        ],
                        [
                            "OBI:0100058",
                            "NCIT:C4813"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "includeResultsetResponses": {
                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/IncludeResultsetResponses"
            },
            "limit": {
                "in": "query",
                "name": "limit",
                "schema": {
                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Limit"
                }
            },
            "requestedSchema": {
                "description": "Schema to be used to format the `result` field in the response. The response will use Beacon format.",
                "example": "ga4gh-service-info-v1.0",
                "in": "query",
                "name": "requestedSchema",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "skip": {
                "in": "query",
                "name": "skip",
                "schema": {
                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Skip"
                }
            }
        },
        "responses": {
            "ResultsOKResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconBooleanResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCountResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconResultsetsResponse.json"
                                }
                            ]
                        }
                    }
                },
                "description": "Successful operation."
            }
        }
    },
    "info": {
        "contact": {
            "email": "beacon@ga4gh.org"
        },
        "description": "TBD",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "GA4GH Beacon API Specification - features endpoints",
        "version": "2.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/features": {
            "get": {
                "description": "Get a list of features",
                "operationId": "getFeatures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/includeResultsetResponses"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "post": {
                "description": "Get a list of features",
                "operationId": "postFeaturesRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/features/{id}": {
            "get": {
                "description": "Get details about one feature, identified by its (unique) 'id'",
                "operationId": "getOneFeature",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get details about one Feature, identified by its (unique) 'id'",
                "operationId": "postOneFeature",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/features/{id}/biosamples": {
            "get": {
                "description": "Get the biosample list from one feature, identified by its (unique) 'id'",
                "operationId": "getOneFeatureBiosamples",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get the biosamples list from one feature, identified by its (unique) 'id'",
                "operationId": "postOneFeatureBiosamples",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        }
    },
    "servers": []
}