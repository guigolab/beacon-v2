{
    "components": {
        "parameters": {
            "entryId": {
                "in": "path",
                "name": "id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "filters": {
                "in": "query",
                "name": "filters",
                "schema": {
                    "examples": [
                        "DUO:0000007"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "featureIDList": {
                "in": "query",
                "name": "featureIDList",
                "schema": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "biosampleIDList": {
                "in": "query",
                "name": "biosampleIDList",
                "schema": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "minValue": {
                "in": "query",
                "name": "minValue",
                "schema": {
                    "items": {
                        "type": "number"
                    }
                }
            },
            "maxValue": {
                "in": "query",
                "name": "maxValue",
                "schema": {
                    "items": {
                        "type": "number"
                    }
                }
            },
            "unit": {
                "in": "query",
                "name": "unit",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "TPM",
                        "RPM",
                        "RPKM",
                        "FPKM",
                        "raw"
                    ]
                }
            },
            "limit": {
                "in": "query",
                "name": "limit",
                "schema": {
                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Limit"
                }
            },
            "requestedSchema": {
                "description": "Schema to be used to format the `result` field in the response. The response will use Beacon format.",
                "example": "ga4gh-service-info-v1.0",
                "in": "query",
                "name": "requestedSchema",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "skip": {
                "in": "query",
                "name": "skip",
                "schema": {
                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Skip"
                }
            }
        },
        "responses": {
            "CollectionsResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconBooleanResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCountResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCollectionsResponse.json"
                                }
                            ]
                        }
                    }
                },
                "description": "Successful collection list operation."
            },
            "ResultsOKResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconBooleanResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCountResponse.json"
                                },
                                {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconResultsetsResponse.json"
                                }
                            ]
                        }
                    }
                },
                "description": "Successful operation."
            }
        }
    },
    "info": {
        "contact": {
            "email": "beacon@ga4gh.org"
        },
        "description": "TBD",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "GA4GH Beacon API Specification - Matrices Endpoints",
        "version": "2.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/matrices": {
            "get": {
                "description": "Get a list of matrices",
                "operationId": "getMatrices",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/featureIDList"
                    },
                    {
                        "$ref": "#/components/parameters/biosampleIDList"
                    },
                    {
                        "$ref": "#/components/parameters/minValue"
                    },
                    {
                        "$ref": "#/components/parameters/maxValue"
                    },
                    {
                        "$ref": "#/components/parameters/unit"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CollectionsResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "post": {
                "description": "Get a list of matrices",
                "operationId": "postMatricesRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CollectionsResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/matrices/{id}": {
            "get": {
                "description": "Get details about one matrix, identified by its (unique) 'id'",
                "operationId": "getOneMatrix",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get details about one matrix, identified by its (unique) 'id'",
                "operationId": "postOneMatrix",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/matrices/{id}/features": {
            "get": {
                "description": "Get the list of features of one matrix, identified by its (unique) 'id'",
                "operationId": "getOneMatrixFeatures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/filters"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get the list of features of one matrix, identified by its (unique) 'id'",
                "operationId": "postOneMatrixFeatures",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/matrices/{id}/biosamples": {
            "get": {
                "description": "Get a list of biosamples of one matrix, identified by its (unique) 'id'",
                "operationId": "getOneMatrixBiosamples",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get the list of biosamples of one matrix, identified by its (unique) 'id'",
                "operationId": "postOneMatrixBiosamples",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/matrices/{id}/expression_values": {
            "get": {
                "description": "Get the expressionValue list from one matrix, identified by its (unique) 'id'",
                "operationId": "getOneMatrixExpressionValues",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/requestedSchema"
                    },
                    {
                        "$ref": "#/components/parameters/minValue"
                    },
                    {
                        "$ref": "#/components/parameters/maxValue"
                    },
                    {
                        "$ref": "#/components/parameters/featureIDList"
                    },
                    {
                        "$ref": "#/components/parameters/biosampleIDList"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get the expression value list of one matrix, identified by its (unique) 'id'",
                "operationId": "postOneMatrixExpressionValues",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ResultsOKResponse"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        },
        "/matrices/{id}/filtering_terms": {
            "get": {
                "description": "Get the list of filtering terms that could be used with a given matrix, identified by its (unique) 'id'",
                "operationId": "getOnematrixFilteringTerms",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconFilteringTermsResponse.json"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "GET Endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/entryId"
                }
            ],
            "post": {
                "description": "Get the list of filtering terms that could be used with a given matrix, identified by its (unique) 'id'",
                "operationId": "postOnematrixFilteringTerms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconFilteringTermsResponse.json"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "default": {
                        "$ref": "https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation"
                    }
                },
                "tags": [
                    "POST Endpoints"
                ]
            }
        }
    },
    "servers": [],
    "tags": [
        {
            "description": "Available endpoints in this API. All of them have a POST counterpart.",
            "name": "GET Endpoints"
        },
        {
            "description": "The same operations than GET, just by POST.",
            "name": "POST Endpoints"
        }
    ]
}